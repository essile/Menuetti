@model Menuetti.Models.Recipes

@{
    ViewData["Title"] = "Luo uusi resepti";
    var ingredients = ViewBag.Json;
}

<h2>Luo uusi</h2>

<h4>Resepti</h4>
<hr />
<div id="formi">
    <div class="row">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                @*<label type="hidden" asp-for="UserId" class="control-label">Käyttäjä</label>*@
                <input type="hidden" asp-for="UserId" class="form-control" value="@ViewBag.UserId" />
            </div>
            <div class="form-group">
                <label asp-for="RecipeName" class="control-label">Reseptin nimi</label>
                <input asp-for="RecipeName" required autofocus class="form-control" />
                <span asp-validation-for="RecipeName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Portions" class="control-label">Annoksia</label>
                <input asp-for="Portions" class="form-control" />
                <span asp-validation-for="Portions" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Time" class="control-label">Valmistusaika (min)</label>
                <input asp-for="Time" class="form-control" />
                <span asp-validation-for="Time" class="text-danger"></span>
            </div>
            <label asp-for="Ingredients" class="control-label">Raaka-aineet</label>
            <div id="newIngredients">
                @*The ingredients come to this div when added*@
            </div>
            <button type="button" class="btn" id="AddIngredient" onclick="newIngredient()">Lisää raaka-aine</button>
            <div class="form-group">
                <label asp-for="DietType" class="control-label">Ruokavalio</label>
                <select asp-for="DietType" class="form-control"><option disabled selected>--- Valitse ---</option><option>Sekaruoka</option><option>Kasvis</option><option>Vegaaninen</option></select>
                <span asp-validation-for="DietType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Instructions" class="control-label">Valmistusohje</label>
                @Html.TextAreaFor(m => m.Instructions, 15, 600, new { @class = "form-control" })
                <span asp-validation-for="Instructions" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" name="submitButton" value="Tallenna resepti" class="btn btn-default" /> @*Create a new recipe, move to the recipe list*@
            </div>
        </form>
    </div>
</div>

<div>
    @if (Model != null && Model.Ingredients != null)
    {
        foreach (var item in Model.Ingredients)
        {
            <p>@item.IngredientName</p>
            <p>@item.AmountG</p>
            <p>@item.RecipeUnit</p>
        }
    }
</div>
<div>
    <a asp-action="Index" button class="btn btn-default btn-md btn">Takaisin</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    var index = 0;
    function newIngredient() {

        var olderInputs = "";

        // html for an empty input row
        var newEmptyIngredientRow =
            `<div class="row" id="ingredient-row" >
                <div class="short-ingredient-box">
                    <input class="form-control" type="number" id=incredient-${index}-amount min="1" name="Ingredients[${index}].AmountG" />
                </div>
                <div class="short-ingredient-box">
                    <input class="form-control" type="text" id=incredient-${index}-unit name="Ingredients[${index}].RecipeUnit" readonly value="g" />
                </div>
                <div class="long-ingredient-box">
                    <input class="form-control" type="text" id=incredient-${index}-name name="Ingredients[${index}].IngredientName" />
                </div>
            </div >`

        // Adding the first ingredient (input row) - no need to check the previous inputs
        if (index == 0) {
            document.getElementById("newIngredients").innerHTML += (newEmptyIngredientRow += document.getElementById("newIngredients").innerHTML);
        }
        else {
            // Other ingredients - checking the previous inputs using id number
            for (var i = 0; i < index; i++) {

                var previousAmount = document.getElementById(`incredient-${i}-amount`).value;
                var previousUnit = document.getElementById(`incredient-${i}-unit`).value;
                var previousName = document.getElementById(`incredient-${i}-name`).value;

                // html for the previous inputs with values
                var previousIngredientRow =
                    `<div class="form-group" id="added-item-${i}">
                        <div class="row" id="ingredient-row" >
                            <div class="short-ingredient-box">
                                <input class="form-control" type="number" id=incredient-${i}-amount min="1" name="Ingredients[${i}].AmountG" value="${previousAmount}" />
                            </div>
                            <div class="short-ingredient-box">
                                <input class="form-control" type="text" id=incredient-${i}-unit name="Ingredients[${i}].RecipeUnit" readonly value="g" />
                            </div>
                            <div class="long-ingredient-box">
                                <input class="form-control" type="text" id=incredient-${i}-name name="Ingredients[${i}].IngredientName" value="${previousName}" />
                            </div>
                     </div >`

                    // adding all the inputs to one block that will be written again
                    olderInputs = (olderInputs + previousIngredientRow);

                // when the most previous ingredient is added, printing out
                if (i == index - 1) {
                    document.getElementById("newIngredients").innerHTML = olderInputs;

                    var oldIngredientsAndEmpty = (olderInputs += newEmptyIngredientRow);
                    //console.log(oldIngredientsAndEmpty);

                    document.getElementById("newIngredients").innerHTML = oldIngredientsAndEmpty;
                }
            }
        }
        // the index needs to grow after every click
        index++;
    }

</script>
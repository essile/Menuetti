@model Menuetti.Models.Recipes

@{
    ViewData["Title"] = "Luo uusi resepti";
    var ingredients = TempData["ingredients"];
}

<h2>Luo uusi resepti</h2>
<hr />
<div id="formi">
    <form asp-action="Create">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            @*<label type="hidden" asp-for="UserId" class="control-label">Käyttäjä</label>*@
            <input type="hidden" asp-for="UserId" class="form-control" value="@ViewBag.UserId" />
        </div>
        <div class="form-group">
            <label asp-for="RecipeName" class="control-label">Reseptin nimi</label>
            <input asp-for="RecipeName" required autofocus class="form-control" />
            <span asp-validation-for="RecipeName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Portions" class="control-label">Annoksia</label>
            <input asp-for="Portions" class="form-control" />
            <span asp-validation-for="Portions" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Time" class="control-label">Valmistusaika (min)</label>
            <input asp-for="Time" class="form-control" />
            <span asp-validation-for="Time" class="text-danger"></span>
        </div>
        <label asp-for="Ingredients" class="control-label">Raaka-aineet</label>
        <div id="newIngredients">
            @*The ingredients come to this div when added*@
        </div>
            @{await Html.RenderPartialAsync("LoadJson", ingredients, new ViewDataDictionary(ViewData) { { "rowNumber", 0 } });}
        <button type="button" class="btn" id="AddIngredient" onclick="newIngredient()">Lisää uusi raaka-aine</button>
        <div class="form-group">
            <label asp-for="DietType" class="control-label">Ruokavalio</label>
            <select asp-for="DietType" class="form-control"><option disabled selected>--- Valitse ---</option><option>Sekaruoka</option><option>Kasvis</option><option>Vegaaninen</option></select>
            <span asp-validation-for="DietType" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Instructions" class="control-label">Valmistusohje</label>
            @Html.TextAreaFor(m => m.Instructions, 15, 600, new { @class = "form-control" })
            <span asp-validation-for="Instructions" class="text-danger"></span>
        </div>
        <div class="form-group">
            <input type="submit" name="submitButton" value="Tallenna resepti" class="btn btn-default" /> @*Create a new recipe, move to the recipe list*@
        </div>
    </form>
</div>
<div>
    <a asp-action="Index" button class="btn btn-default btn-md btn">Takaisin</a>
</div>

<script>
    var index = 1; // index for both newIngredient() and deleteRow(id) below.
    function newIngredient() {
        var olderInputs = "";

            // Older ingredients - checking the previous inputs using id number
            for (var i = (index-1); i >= 0; i--) {

                var previousAmount = document.getElementById(`incredient-${i}-amount`).value;
                document.getElementById(`incredient-${i}-amount`).value = "";
                // var previousUnit = document.getElementById(`incredient-${i}-unit`).value; - not needed atm, unit readonly
                var previousName = document.getElementById(`incredient-${i}-name`).value;
                document.getElementById(`incredient-${i}-name`).value = "";

                console.log("ingredient" + i + " - " + previousAmount + " " + previousName);


                // html for the previous inputs with values
                var previousIngredientRow =
                    `<div class="form-group" id="added-item-${i+1}">
    <div class="row" id="ingredient-row">
        <div class="short-ingredient-box">
            <input class="form-control" type="number" id=incredient-${i + 1}-amount min="1" name="Ingredients[${i + 1}].AmountG" value="${previousAmount}" />
        </div>
        <div class="short-ingredient-box">
            <input class="form-control" type="text" id=incredient-${i + 1}-unit name="Ingredients[${i + 1}].RecipeUnit" readonly value="g" />
        </div>
        <div class="long-ingredient-box">
            <input class="form-control" type="text" id=incredient-${i + 1}-name name="Ingredients[${i + 1}].IngredientName" value="${previousName}" />
        </div>
        <div class="delete-button">
            <button type="button" onclick="deleteRow(id)" id="delete-button-${i + 1}">X</button>
        </div>
    </div>
</div>`

                // adding all the inputs to one block that will be written again
                olderInputs = (olderInputs + previousIngredientRow);

                // when the most previous ingredient is added, printing out
                if (i == 0) {
                    document.getElementById("newIngredients").innerHTML = olderInputs;
                    //var oldIngredientsAndEmpty = (olderInputs += newEmptyIngredientRow);
                    //document.getElementById("newIngredients").innerHTML = oldIngredientsAndEmpty;
                }
            }
        
        index++;
    }

</script>